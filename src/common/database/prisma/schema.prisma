generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model feature_request {
  id                   String   @id(map: "feature_request_pk") @db.Uuid
  title                String   @db.VarChar
  description          String
  attachment_count     Int?
  status               String   @db.VarChar
  tags                 String[]
  votes                Int      @default(1)
  submitted_by_id      String   @db.VarChar
  created_at           DateTime @db.Timestamp(6)
  updated_at           DateTime @db.Timestamp(6)
  company_id           String?  @db.VarChar
  status_updated_by_id String?  @db.Uuid
  status_history       Json[]   @default([]) @db.Json
}

model feature_request_vote_to_user_id {
  id                 String @id(map: "feature_request_vote_to_user_id_pk") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  feature_request_id String @db.Uuid
  user_id            String @db.VarChar
}

model users {
  id               String   @id(map: "users_pk") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email            String   @unique(map: "users_un") @db.VarChar
  password         String   @db.VarChar
  created_at       DateTime @db.Timestamp(6)
  updated_at       DateTime @db.Timestamp(6)
  owned_company_id String?  @db.Uuid
  name             String   @default(" ") @db.VarChar
  companies        String[] @db.Uuid
}

model company {
  id            String   @id(map: "company_pk") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String   @db.VarChar
  country       String?  @db.VarChar
  email         String   @db.VarChar
  created_by_id String   @db.Uuid
  created_at    DateTime @db.Timestamp(6)
  updated_at    DateTime @db.Timestamp(6)
  admin_id      String   @db.Uuid
}
